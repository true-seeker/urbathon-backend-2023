//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var NewsPolls = newNewsPollsTable("public", "news_polls", "")

type newsPollsTable struct {
	postgres.Table

	// Columns
	ID    postgres.ColumnInteger
	Title postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type NewsPollsTable struct {
	newsPollsTable

	EXCLUDED newsPollsTable
}

// AS creates new NewsPollsTable with assigned alias
func (a NewsPollsTable) AS(alias string) *NewsPollsTable {
	return newNewsPollsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new NewsPollsTable with assigned schema name
func (a NewsPollsTable) FromSchema(schemaName string) *NewsPollsTable {
	return newNewsPollsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new NewsPollsTable with assigned table prefix
func (a NewsPollsTable) WithPrefix(prefix string) *NewsPollsTable {
	return newNewsPollsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new NewsPollsTable with assigned table suffix
func (a NewsPollsTable) WithSuffix(suffix string) *NewsPollsTable {
	return newNewsPollsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newNewsPollsTable(schemaName, tableName, alias string) *NewsPollsTable {
	return &NewsPollsTable{
		newsPollsTable: newNewsPollsTableImpl(schemaName, tableName, alias),
		EXCLUDED:       newNewsPollsTableImpl("", "excluded", ""),
	}
}

func newNewsPollsTableImpl(schemaName, tableName, alias string) newsPollsTable {
	var (
		IDColumn       = postgres.IntegerColumn("id")
		TitleColumn    = postgres.StringColumn("title")
		allColumns     = postgres.ColumnList{IDColumn, TitleColumn}
		mutableColumns = postgres.ColumnList{TitleColumn}
	)

	return newsPollsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:    IDColumn,
		Title: TitleColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
