//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var AppealStatus = newAppealStatusTable("public", "appeal_status", "")

type appealStatusTable struct {
	postgres.Table

	// Columns
	ID     postgres.ColumnInteger
	Status postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type AppealStatusTable struct {
	appealStatusTable

	EXCLUDED appealStatusTable
}

// AS creates new AppealStatusTable with assigned alias
func (a AppealStatusTable) AS(alias string) *AppealStatusTable {
	return newAppealStatusTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new AppealStatusTable with assigned schema name
func (a AppealStatusTable) FromSchema(schemaName string) *AppealStatusTable {
	return newAppealStatusTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new AppealStatusTable with assigned table prefix
func (a AppealStatusTable) WithPrefix(prefix string) *AppealStatusTable {
	return newAppealStatusTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new AppealStatusTable with assigned table suffix
func (a AppealStatusTable) WithSuffix(suffix string) *AppealStatusTable {
	return newAppealStatusTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newAppealStatusTable(schemaName, tableName, alias string) *AppealStatusTable {
	return &AppealStatusTable{
		appealStatusTable: newAppealStatusTableImpl(schemaName, tableName, alias),
		EXCLUDED:          newAppealStatusTableImpl("", "excluded", ""),
	}
}

func newAppealStatusTableImpl(schemaName, tableName, alias string) appealStatusTable {
	var (
		IDColumn       = postgres.IntegerColumn("id")
		StatusColumn   = postgres.StringColumn("status")
		allColumns     = postgres.ColumnList{IDColumn, StatusColumn}
		mutableColumns = postgres.ColumnList{StatusColumn}
	)

	return appealStatusTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:     IDColumn,
		Status: StatusColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
