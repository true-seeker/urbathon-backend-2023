// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/appeal": {
            "get": {
                "description": "get all appeals",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appeal"
                ],
                "summary": "get all appeals",
                "parameters": [
                    {
                        "type": "string",
                        "example": "name",
                        "name": "field",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "lat_down",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "lat_up",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "long_down",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "long_up",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "asc",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "user_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AppealPaged"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            },
            "post": {
                "description": "create appeal",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appeal"
                ],
                "summary": "create appeal",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Улица Пушкина",
                        "name": "address",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "appeal_type_id",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "Текст обращения",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "number",
                        "example": 54.1234,
                        "name": "latitude",
                        "in": "formData"
                    },
                    {
                        "type": "number",
                        "example": 122.7656,
                        "name": "longitude",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "Обращение",
                        "name": "title",
                        "in": "formData"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "collectionFormat": "csv",
                        "description": "photos",
                        "name": "photos",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Appeal"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            }
        },
        "/appeal/{id}": {
            "get": {
                "description": "get appeal by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appeal"
                ],
                "summary": "get appeal by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "appeal id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Appeal"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            },
            "put": {
                "description": "update appeal",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appeal"
                ],
                "summary": "update appeal",
                "parameters": [
                    {
                        "description": "appeal",
                        "name": "appeal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/input.AppealUpdate"
                        }
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "appeal id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Appeal"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete appeal",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appeal"
                ],
                "summary": "delete appeal",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "appeal id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            }
        },
        "/appeal/{id}/comment": {
            "get": {
                "description": "get appeal comments",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appealComment"
                ],
                "summary": "get appeal comments",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "appeal id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 20,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "page",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AppealCommentPaged"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            },
            "post": {
                "description": "create comment appeal",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appealComment"
                ],
                "summary": "create comment appeal",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "appeal id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "Текст кооментария",
                        "name": "text",
                        "in": "formData"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "collectionFormat": "csv",
                        "description": "photos",
                        "name": "photos",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.AppealComment"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            }
        },
        "/appeal/{id}/status/{status_id}": {
            "post": {
                "description": "update appeal status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appeal"
                ],
                "summary": "update appeal status",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "appeal id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "new status id",
                        "name": "status_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            }
        },
        "/appeal_category": {
            "get": {
                "description": "get all appealCategories",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appealCategory"
                ],
                "summary": "get all appealCategories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.AppealCategory"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            }
        },
        "/appeal_category/{id}": {
            "get": {
                "description": "get appealCategory by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appealCategory"
                ],
                "summary": "get appealCategory by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "appealCategory id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AppealCategory"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            }
        },
        "/appeal_category/{id}/appeal_types": {
            "get": {
                "description": "get all appealTypes by CategoryId",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appealCategory"
                ],
                "summary": "get all appealTypes by CategoryId",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "appealCategory id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.AppealTypeByCategory"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            }
        },
        "/appeal_status": {
            "get": {
                "description": "get all appealStatuses",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appealStatus"
                ],
                "summary": "get all appealStatuses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.AppealStatus"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            }
        },
        "/appeal_status/{id}": {
            "get": {
                "description": "get appealStatus by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appealStatus"
                ],
                "summary": "get appealStatus by id",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "appealStatus id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AppealStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            }
        },
        "/appeal_type": {
            "get": {
                "description": "get all appealTypes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appealType"
                ],
                "summary": "get all appealTypes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.AppealType"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            }
        },
        "/appeal_type/{id}": {
            "get": {
                "description": "get appealType by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appealType"
                ],
                "summary": "get appealType by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "appealType id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AppealType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "login",
                "parameters": [
                    {
                        "description": "login and password",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/input.UserLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "logout",
                "tags": [
                    "auth"
                ],
                "summary": "logout",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "register",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "register",
                "parameters": [
                    {
                        "description": "UserRegister",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/input.UserRegister"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            }
        },
        "/auth/test": {
            "post": {
                "description": "auth test",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "auth test",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.User"
                        }
                    }
                }
            }
        },
        "/map/get_map_elements": {
            "get": {
                "description": "get map elements",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "map"
                ],
                "summary": "get map elements",
                "parameters": [
                    {
                        "type": "number",
                        "name": "lat_down",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "lat_up",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "long_down",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "long_up",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.MapElement"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            }
        },
        "/news": {
            "get": {
                "description": "get all news",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "news"
                ],
                "summary": "get all news",
                "parameters": [
                    {
                        "minimum": -1,
                        "type": "integer",
                        "default": 1,
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 20,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "page",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NewsPaged"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            },
            "post": {
                "description": "create news",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "news"
                ],
                "summary": "create news",
                "parameters": [
                    {
                        "type": "string",
                        "name": "body",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "name": "category_id",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "тут json голосования",
                        "name": "poll",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "title",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "photo",
                        "name": "photo",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.News"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            }
        },
        "/news/{id}": {
            "get": {
                "description": "get news by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "news"
                ],
                "summary": "get news by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "news id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.News"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            }
        },
        "/news/{id}/poll_vote/{option_id}": {
            "post": {
                "description": "poll vote",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "news"
                ],
                "summary": "poll vote",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "news id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "option_id",
                        "name": "option_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.News"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            }
        },
        "/organization": {
            "post": {
                "description": "register organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "register organization",
                "parameters": [
                    {
                        "description": "OrganizationRegister",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/input.OrganizationRegister"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            }
        },
        "/organization/{id}/add_user/{user_id}": {
            "post": {
                "description": "add user to organization",
                "tags": [
                    "organization"
                ],
                "summary": "add user to organization",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "organization id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "errorHandler.HttpErr": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Error message"
                },
                "status_code": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "input.AppealUpdate": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "Улица Пушкина"
                },
                "appeal_type_id": {
                    "type": "integer",
                    "example": 1
                },
                "description": {
                    "type": "string",
                    "example": "Текст обращения"
                },
                "latitude": {
                    "type": "number",
                    "example": 54.1234
                },
                "longitude": {
                    "type": "number",
                    "example": 122.7656
                },
                "title": {
                    "type": "string",
                    "example": "Обращение"
                }
            }
        },
        "input.OrganizationRegister": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "category_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "inn": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "example": "ЖКХ"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "input.UserLogin": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@gmail.com"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "input.UserRegister": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@gmail.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "Иван"
                },
                "last_name": {
                    "type": "string",
                    "example": "Иванов"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                },
                "patronymic": {
                    "type": "string",
                    "example": "Иванович"
                },
                "phone": {
                    "type": "string",
                    "example": "89121234567"
                }
            }
        },
        "response.Appeal": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "Улица Пушкина"
                },
                "appeal_photos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.AppealPhoto"
                    }
                },
                "appeal_status": {
                    "$ref": "#/definitions/response.AppealStatus"
                },
                "appeal_type": {
                    "$ref": "#/definitions/response.AppealType"
                },
                "description": {
                    "type": "string",
                    "example": "Текст обращения"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "latitude": {
                    "type": "number",
                    "example": 54.1234
                },
                "longitude": {
                    "type": "number",
                    "example": 122.7656
                },
                "title": {
                    "type": "string",
                    "example": "Обращение"
                },
                "user": {
                    "$ref": "#/definitions/response.User"
                }
            }
        },
        "response.AppealCategory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "title": {
                    "type": "string",
                    "example": "Категория"
                }
            }
        },
        "response.AppealComment": {
            "type": "object",
            "properties": {
                "appeal_comment_photos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.AppealCommentPhoto"
                    }
                },
                "date": {
                    "type": "string",
                    "example": "2024-02-10T00:00:00+05:00"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "text": {
                    "type": "string",
                    "example": "Текст комментария"
                },
                "user": {
                    "$ref": "#/definitions/response.User"
                }
            }
        },
        "response.AppealCommentPaged": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.AppealComment"
                    }
                },
                "next_page_url": {
                    "type": "string",
                    "example": "/api/news?page=1\u0026page_size=10"
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 10
                },
                "total": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "response.AppealCommentPhoto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "url": {
                    "type": "string",
                    "example": "https://storage.yandexcloud.net/urbathon/test.jpg"
                }
            }
        },
        "response.AppealPaged": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Appeal"
                    }
                },
                "next_page_url": {
                    "type": "string",
                    "example": "/api/news?page=1\u0026page_size=10"
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 10
                },
                "total": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "response.AppealPhoto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "url": {
                    "type": "string",
                    "example": "https://storage.yandexcloud.net/urbathon/test.jpg"
                }
            }
        },
        "response.AppealStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "status": {
                    "type": "string",
                    "example": "Решено"
                }
            }
        },
        "response.AppealType": {
            "type": "object",
            "properties": {
                "appeal_category": {
                    "$ref": "#/definitions/response.AppealCategory"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "title": {
                    "type": "string",
                    "example": "Тип"
                }
            }
        },
        "response.AppealTypeByCategory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "title": {
                    "type": "string",
                    "example": "Тип"
                }
            }
        },
        "response.MapElement": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "response.News": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string",
                    "example": "Тело новости"
                },
                "category": {
                    "$ref": "#/definitions/response.NewsCategory"
                },
                "date": {
                    "type": "string",
                    "example": "2024-02-10T00:00:00+05:00"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "photo_url": {
                    "type": "string",
                    "example": "https://storage.yandexcloud.net/urbathon/test.jpg"
                },
                "poll": {
                    "$ref": "#/definitions/response.NewsPoll"
                },
                "title": {
                    "type": "string",
                    "example": "Заголовок"
                }
            }
        },
        "response.NewsCategory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "title": {
                    "type": "string",
                    "example": "Отходы"
                }
            }
        },
        "response.NewsPaged": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.News"
                    }
                },
                "next_page_url": {
                    "type": "string",
                    "example": "/api/news?page=1\u0026page_size=10"
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 10
                },
                "total": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "response.NewsPoll": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.PollOption"
                    }
                },
                "title": {
                    "type": "string",
                    "example": "Название опроса"
                }
            }
        },
        "response.PollOption": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "is_user_voted": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string",
                    "example": "Вариант опроса"
                },
                "votes": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "response.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@gmail.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "Иван"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "last_name": {
                    "type": "string",
                    "example": "Иванов"
                },
                "organization_id": {
                    "type": "integer",
                    "example": 1
                },
                "patronymic": {
                    "type": "string",
                    "example": "Иванович"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Urbathon-2023",
	Description:      "Спецификация приложения команды подCRUDули",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
