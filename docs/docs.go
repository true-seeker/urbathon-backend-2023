// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/appeal": {
            "get": {
                "description": "get all appeals",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appeal"
                ],
                "summary": "get all appeals",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 20,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "page",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AppealPaged"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            },
            "post": {
                "description": "create appeal",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appeal"
                ],
                "summary": "create appeal",
                "parameters": [
                    {
                        "description": "appeal",
                        "name": "appeal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/input.Appeal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Appeal"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            }
        },
        "/appeal/{id}": {
            "get": {
                "description": "get appeal by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appeal"
                ],
                "summary": "get appeal by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "appeal id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Appeal"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            },
            "put": {
                "description": "update appeal",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appeal"
                ],
                "summary": "update appeal",
                "parameters": [
                    {
                        "description": "appeal",
                        "name": "appeal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/input.Appeal"
                        }
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "appeal id",
                        "name": "appeal_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Appeal"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete appeal",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appeal"
                ],
                "summary": "delete appeal",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "appeal id",
                        "name": "appeal_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "login",
                "parameters": [
                    {
                        "description": "login and password",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/input.UserLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "logout",
                "tags": [
                    "auth"
                ],
                "summary": "logout",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "register",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "register",
                "parameters": [
                    {
                        "description": "UserRegister",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/input.UserRegister"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            }
        },
        "/auth/test": {
            "post": {
                "description": "auth test",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "auth test",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.User"
                        }
                    }
                }
            }
        },
        "/news": {
            "get": {
                "description": "get all news",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "news"
                ],
                "summary": "get all news",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 20,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "page",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NewsPaged"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            }
        },
        "/news/{id}": {
            "get": {
                "description": "get news by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "news"
                ],
                "summary": "get news by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "news id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.News"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorHandler.HttpErr"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "errorHandler.HttpErr": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Error message"
                },
                "status_code": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "input.Appeal": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "Улица Пушкина"
                },
                "appeal_type_id": {
                    "type": "integer",
                    "example": 1
                },
                "description": {
                    "type": "string",
                    "example": "Текст обращения"
                },
                "latitude": {
                    "type": "number",
                    "example": 54.1234
                },
                "longitude": {
                    "type": "number",
                    "example": 122.7656
                },
                "title": {
                    "type": "string",
                    "example": "Обращение"
                }
            }
        },
        "input.UserLogin": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@gmail.com"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "input.UserRegister": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@gmail.com"
                },
                "name": {
                    "type": "string",
                    "example": "Иванов Иван Иванович"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "response.Appeal": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "Улица Пушкина"
                },
                "appeal_type": {
                    "$ref": "#/definitions/response.AppealType"
                },
                "description": {
                    "type": "string",
                    "example": "Текст обращения"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "latitude": {
                    "type": "number",
                    "example": 54.1234
                },
                "longitude": {
                    "type": "number",
                    "example": 122.7656
                },
                "title": {
                    "type": "string",
                    "example": "Обращение"
                },
                "user": {
                    "$ref": "#/definitions/response.User"
                }
            }
        },
        "response.AppealCategory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "title": {
                    "type": "string",
                    "example": "Категория"
                }
            }
        },
        "response.AppealPaged": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Appeal"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.AppealTheme": {
            "type": "object",
            "properties": {
                "appeal_category": {
                    "$ref": "#/definitions/response.AppealCategory"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "title": {
                    "type": "string",
                    "example": "Тема"
                }
            }
        },
        "response.AppealType": {
            "type": "object",
            "properties": {
                "appeal_theme": {
                    "$ref": "#/definitions/response.AppealTheme"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "title": {
                    "type": "string",
                    "example": "Тип"
                }
            }
        },
        "response.News": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "response.NewsPaged": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.News"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@gmail.com"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Иванов Иван Иванович"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Urbathon-2023",
	Description:      "Спецификация приложения команды подCRUDули",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
